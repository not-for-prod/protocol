{
  "swagger": "2.0",
  "info": {
    "title": "api/api.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "Wallet"
    },
    {
      "name": "WalletSolidity"
    },
    {
      "name": "WalletExtension"
    },
    {
      "name": "Database"
    },
    {
      "name": "Monitor"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/monitor/getstatsinfo": {
      "get": {
        "operationId": "Monitor_GetStatsInfo2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.MetricsInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Monitor"
        ]
      },
      "post": {
        "operationId": "Monitor_GetStatsInfo",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.MetricsInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Monitor"
        ]
      }
    },
    "/wallet/accountpermissionupdate": {
      "get": {
        "operationId": "Wallet_AccountPermissionUpdate2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionExtention"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "owner.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "owner.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "owner.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "owner.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "owner.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "owner.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witness.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witness.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witness.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witness.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witness.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witness.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_AccountPermissionUpdate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionExtention"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AccountPermissionUpdateContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/broadcasttransaction": {
      "get": {
        "operationId": "Wallet_BroadcastTransaction2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Return"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "rawData.refBlockBytes",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "rawData.refBlockNum",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "rawData.refBlockHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "rawData.expiration",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "rawData.data",
            "description": "data not used",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "rawData.scripts",
            "description": "scripts not used",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "rawData.timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "rawData.feeLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "signature",
            "description": "only support size = 1,  repeated list here for muti-sig extension",
            "in": "query",
            "required": false,
            "type": "array",
            "items": {
              "type": "string",
              "format": "byte"
            },
            "collectionFormat": "multi"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_BroadcastTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Return"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/createaccount": {
      "get": {
        "summary": "Please use CreateAccount2 instead of this function.",
        "operationId": "Wallet_CreateAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "accountAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use CreateAccount2 instead of this function.",
        "operationId": "Wallet_CreateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AccountCreateContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/createassetissue": {
      "get": {
        "summary": "Please use CreateAssetIssue2 instead of this function.",
        "operationId": "Wallet_CreateAssetIssue2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "abbr",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "totalSupply",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "trxNum",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "precision",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "num",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "order",
            "description": "useless",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "voteScore",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "freeAssetNetLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "publicFreeAssetNetLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "publicFreeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "publicLatestFreeNetTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use CreateAssetIssue2 instead of this function.",
        "operationId": "Wallet_CreateAssetIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/createtransaction": {
      "get": {
        "summary": "Please use CreateTransaction2 instead of this function.",
        "operationId": "Wallet_CreateTransaction2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "toAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use CreateTransaction2 instead of this function.",
        "operationId": "Wallet_CreateTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.TransferContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/createwitness": {
      "get": {
        "summary": "Please use CreateWitness2 instead of this function.",
        "operationId": "Wallet_CreateWitness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use CreateWitness2 instead of this function.",
        "operationId": "Wallet_CreateWitness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.WitnessCreateContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/freezebalance": {
      "get": {
        "summary": "Please use FreezeBalance2 instead of this function.",
        "operationId": "Wallet_FreezeBalance2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "frozenBalance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "frozenDuration",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BANDWIDTH",
              "ENERGY",
              "TRON_POWER"
            ],
            "default": "BANDWIDTH"
          },
          {
            "name": "receiverAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use FreezeBalance2 instead of this function.",
        "operationId": "Wallet_FreezeBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.FreezeBalanceContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getaccount": {
      "get": {
        "operationId": "Wallet_GetAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getaccountbalance": {
      "get": {
        "operationId": "Wallet_GetAccountBalance2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AccountBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountIdentifier.address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "blockIdentifier.hash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "blockIdentifier.number",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAccountBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AccountBalanceResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AccountBalanceRequest"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getaccountbyid": {
      "get": {
        "operationId": "Wallet_GetAccountById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAccountById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getaccountnet": {
      "get": {
        "operationId": "Wallet_GetAccountNet2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AccountNetMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAccountNet",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AccountNetMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getassetissuebyaccount": {
      "get": {
        "operationId": "Wallet_GetAssetIssueByAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAssetIssueByAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getassetissuebyname": {
      "get": {
        "operationId": "Wallet_GetAssetIssueByName2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAssetIssueByName",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueContract"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getassetissuelist": {
      "get": {
        "operationId": "Wallet_GetAssetIssueList2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetAssetIssueList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getblockbalancetrace": {
      "get": {
        "operationId": "Wallet_GetBlockBalanceTrace2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.BlockBalanceTrace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "hash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "number",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetBlockBalanceTrace",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.BlockBalanceTrace"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BlockBalanceTrace.BlockIdentifier"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getblockbyid": {
      "get": {
        "operationId": "Wallet_GetBlockById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetBlockById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getblockbylatestnum": {
      "get": {
        "summary": "Please use GetBlockByLatestNum2 instead of this function.",
        "operationId": "Wallet_GetBlockByLatestNum2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.BlockList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "num",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use GetBlockByLatestNum2 instead of this function.",
        "operationId": "Wallet_GetBlockByLatestNum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.BlockList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getblockbylimitnext": {
      "get": {
        "summary": "Please use GetBlockByLimitNext2 instead of this function.",
        "operationId": "Wallet_GetBlockByLimitNext2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.BlockList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "startNum",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "endNum",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use GetBlockByLimitNext2 instead of this function.",
        "operationId": "Wallet_GetBlockByLimitNext",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.BlockList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BlockLimit"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getblockbynum": {
      "get": {
        "summary": "Please use GetBlockByNum2 instead of this function.",
        "operationId": "Wallet_GetBlockByNum2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "num",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use GetBlockByNum2 instead of this function.",
        "operationId": "Wallet_GetBlockByNum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getchainparameters": {
      "get": {
        "operationId": "Wallet_GetChainParameters2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ChainParameters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetChainParameters",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ChainParameters"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getexchangebyid": {
      "get": {
        "operationId": "Wallet_GetExchangeById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Exchange"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetExchangeById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Exchange"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getnextmaintenancetime": {
      "get": {
        "operationId": "Wallet_GetNextMaintenanceTime2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetNextMaintenanceTime",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getnowblock": {
      "get": {
        "summary": "Please use GetNowBlock2 instead of this function.",
        "operationId": "Wallet_GetNowBlock2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use GetNowBlock2 instead of this function.",
        "operationId": "Wallet_GetNowBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getpaginatedassetissuelist": {
      "get": {
        "operationId": "Wallet_GetPaginatedAssetIssueList2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetPaginatedAssetIssueList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.PaginatedMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getpaginatedexchangelist": {
      "get": {
        "operationId": "Wallet_GetPaginatedExchangeList2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ExchangeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetPaginatedExchangeList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ExchangeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.PaginatedMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getpaginatedproposallist": {
      "get": {
        "operationId": "Wallet_GetPaginatedProposalList2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ProposalList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetPaginatedProposalList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ProposalList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.PaginatedMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/getproposalbyid": {
      "get": {
        "operationId": "Wallet_GetProposalById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetProposalById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Proposal"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/gettransactionbyid": {
      "get": {
        "operationId": "Wallet_GetTransactionById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetTransactionById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/gettransactioninfobyid": {
      "get": {
        "operationId": "Wallet_GetTransactionInfoById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_GetTransactionInfoById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/listexchanges": {
      "get": {
        "operationId": "Wallet_ListExchanges2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ExchangeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_ListExchanges",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ExchangeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/listnodes": {
      "get": {
        "operationId": "Wallet_ListNodes2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.NodeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_ListNodes",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.NodeList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/listproposals": {
      "get": {
        "operationId": "Wallet_ListProposals2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ProposalList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_ListProposals",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.ProposalList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/listwitnesses": {
      "get": {
        "operationId": "Wallet_ListWitnesses2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.WitnessList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_ListWitnesses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.WitnessList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/participateassetissue": {
      "get": {
        "summary": "Please use ParticipateAssetIssue2 instead of this function.",
        "operationId": "Wallet_ParticipateAssetIssue2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "toAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetName",
            "description": "this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "amount",
            "description": "the amount of drops",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use ParticipateAssetIssue2 instead of this function.",
        "operationId": "Wallet_ParticipateAssetIssue",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.ParticipateAssetIssueContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/setaccountid": {
      "get": {
        "operationId": "Wallet_SetAccountId2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountId",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_SetAccountId",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Set account id if the account has no id. Account id is unique and case insensitive.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.SetAccountIdContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/totaltransaction": {
      "get": {
        "operationId": "Wallet_TotalTransaction2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "operationId": "Wallet_TotalTransaction",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/transferasset": {
      "get": {
        "summary": "Please use TransferAsset2 instead of this function.",
        "operationId": "Wallet_TransferAsset2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "assetName",
            "description": "this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "toAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "amount",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use TransferAsset2 instead of this function.",
        "operationId": "Wallet_TransferAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.TransferAssetContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/unfreezeasset": {
      "get": {
        "summary": "Please use UnfreezeAsset2 instead of this function.",
        "operationId": "Wallet_UnfreezeAsset2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use UnfreezeAsset2 instead of this function.",
        "operationId": "Wallet_UnfreezeAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.UnfreezeAssetContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/unfreezebalance": {
      "get": {
        "summary": "Please use UnfreezeBalance2 instead of this function.",
        "operationId": "Wallet_UnfreezeBalance2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "resource",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "BANDWIDTH",
              "ENERGY",
              "TRON_POWER"
            ],
            "default": "BANDWIDTH"
          },
          {
            "name": "receiverAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use UnfreezeBalance2 instead of this function.",
        "operationId": "Wallet_UnfreezeBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.UnfreezeBalanceContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/updateaccount": {
      "get": {
        "summary": "Please use UpdateAccount2 instead of this function.",
        "operationId": "Wallet_UpdateAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use UpdateAccount2 instead of this function.",
        "operationId": "Wallet_UpdateAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "Update account name. Account name is not unique now.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AccountUpdateContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/updateasset": {
      "get": {
        "summary": "Please use UpdateAsset2 instead of this function.",
        "operationId": "Wallet_UpdateAsset2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "description",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "url",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "newLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "newPublicLimit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use UpdateAsset2 instead of this function.",
        "operationId": "Wallet_UpdateAsset",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.UpdateAssetContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/updatewitness": {
      "get": {
        "summary": "Please use UpdateWitness2 instead of this function.",
        "operationId": "Wallet_UpdateWitness2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "updateUrl",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use UpdateWitness2 instead of this function.",
        "operationId": "Wallet_UpdateWitness",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.WitnessUpdateContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/votewitnessaccount": {
      "get": {
        "summary": "Please use VoteWitnessAccount2 instead of this function.",
        "operationId": "Wallet_VoteWitnessAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "support",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use VoteWitnessAccount2 instead of this function.",
        "operationId": "Wallet_VoteWitnessAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.VoteWitnessContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/wallet/withdrawbalance": {
      "get": {
        "summary": "Please use WithdrawBalance2 instead of this function.",
        "operationId": "Wallet_WithdrawBalance2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "ownerAddress",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "Wallet"
        ]
      },
      "post": {
        "summary": "Please use WithdrawBalance2 instead of this function.",
        "operationId": "Wallet_WithdrawBalance",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.WithdrawBalanceContract"
            }
          }
        ],
        "tags": [
          "Wallet"
        ]
      }
    },
    "/walletextension/gettransactionsfromthis": {
      "get": {
        "summary": "Please use GetTransactionsFromThis2 instead of this function.",
        "operationId": "WalletExtension_GetTransactionsFromThis2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "account.accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "account.address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "account.ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "account.witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WalletExtension"
        ]
      },
      "post": {
        "summary": "Please use GetTransactionsFromThis2 instead of this function.",
        "operationId": "WalletExtension_GetTransactionsFromThis",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AccountPaginated"
            }
          }
        ],
        "tags": [
          "WalletExtension"
        ]
      }
    },
    "/walletextension/gettransactionstothis": {
      "get": {
        "summary": "Please use GetTransactionsToThis2 instead of this function.",
        "operationId": "WalletExtension_GetTransactionsToThis2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "account.accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "account.address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "account.codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "account.ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "account.witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "account.witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "account.witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "account.delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "account.acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WalletExtension"
        ]
      },
      "post": {
        "summary": "Please use GetTransactionsToThis2 instead of this function.",
        "operationId": "WalletExtension_GetTransactionsToThis",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.AccountPaginated"
            }
          }
        ],
        "tags": [
          "WalletExtension"
        ]
      }
    },
    "/walletsolidity/getaccount": {
      "get": {
        "operationId": "WalletSolidity_GetAccount2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_GetAccount",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/getaccountbyid": {
      "get": {
        "operationId": "WalletSolidity_GetAccountById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "accountName",
            "description": "account nick name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Normal",
              "AssetIssue",
              "Contract"
            ],
            "default": "Normal"
          },
          {
            "name": "address",
            "description": "the create address",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "balance",
            "description": "the trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "asset",
            "description": "the other asset owned by this account",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "assetV2",
            "description": "the other asset owned by this account，key is assetId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "netUsage",
            "description": "bandwidth, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenBalanceForBandwidth",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "delegatedFrozenBalanceForBandwidth",
            "description": "Freeze and provide balances to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "oldTronPower",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "tronPower.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "assetOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "createTime",
            "description": "this account create time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestOprationTime",
            "description": "this last operation time, including transfer, voting and so on. //FIXME fix grammar",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "allowance",
            "description": "witness block producing allowance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestWithdrawTime",
            "description": "last withdraw time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "code",
            "description": "not used so far",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "isWitness",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "isCommittee",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "assetIssuedName",
            "description": "asset_issued_name",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "assetIssuedID",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "latestAssetOperationTime",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestAssetOperationTimeV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeNetUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "freeAssetNetUsage",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "freeAssetNetUsageV2",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "latestConsumeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "latestConsumeFreeTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountId",
            "description": "the identity of this account, case insensitive",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "netWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "netWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "accountResource.energyUsage",
            "description": "energy resource, get from frozen",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.frozenBalance",
            "description": "the frozen trx balance",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.frozenBalanceForEnergy.expireTime",
            "description": "the expire time",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestConsumeTimeForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenBalanceForEnergy",
            "description": "Frozen balance provided by other accounts to this account",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenBalanceForEnergy",
            "description": "Frozen balances provided to other accounts",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageLimit",
            "description": "storage resource, get from market",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.storageUsage",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.latestExchangeStorageTime",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowSize",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.delegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.acquiredDelegatedFrozenV2BalanceForEnergy",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "accountResource.energyWindowOptimized",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "codeHash",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "ownerPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "ownerPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "ownerPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "ownerPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "ownerPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "witnessPermission.type",
            "in": "query",
            "required": false,
            "type": "string",
            "enum": [
              "Owner",
              "Witness",
              "Active"
            ],
            "default": "Owner"
          },
          {
            "name": "witnessPermission.id",
            "description": "Owner id=0, Witness id=1, Active id start by 2",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.permissionName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "witnessPermission.threshold",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "witnessPermission.parentId",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "witnessPermission.operations",
            "description": "1 bit 1 contract",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          },
          {
            "name": "delegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "acquiredDelegatedFrozenV2BalanceForBandwidth",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_GetAccountById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.Account"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/getassetissuelist": {
      "get": {
        "operationId": "WalletSolidity_GetAssetIssueList2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_GetAssetIssueList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/getblockbynum": {
      "get": {
        "summary": "Please use GetBlockByNum2 instead of this function.",
        "operationId": "WalletSolidity_GetBlockByNum2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "num",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "summary": "Please use GetBlockByNum2 instead of this function.",
        "operationId": "WalletSolidity_GetBlockByNum",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.NumberMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/getnowblock": {
      "get": {
        "summary": "Please use GetNowBlock2 instead of this function.",
        "operationId": "WalletSolidity_GetNowBlock2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "summary": "Please use GetNowBlock2 instead of this function.",
        "operationId": "WalletSolidity_GetNowBlock",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Block"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/getpaginatedassetissuelist": {
      "get": {
        "operationId": "WalletSolidity_GetPaginatedAssetIssueList2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_GetPaginatedAssetIssueList",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.AssetIssueList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.PaginatedMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/gettransactionbyid": {
      "get": {
        "operationId": "WalletSolidity_GetTransactionById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_GetTransactionById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.Transaction"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/gettransactioninfobyid": {
      "get": {
        "operationId": "WalletSolidity_GetTransactionInfoById2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "value",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "byte"
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_GetTransactionInfoById",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.TransactionInfo"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.BytesMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    },
    "/walletsolidity/listwitnesses": {
      "get": {
        "operationId": "WalletSolidity_ListWitnesses2",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.WitnessList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "tags": [
          "WalletSolidity"
        ]
      },
      "post": {
        "operationId": "WalletSolidity_ListWitnesses",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/protocol.WitnessList"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/google.rpc.Status"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/protocol.EmptyMessage"
            }
          }
        ],
        "tags": [
          "WalletSolidity"
        ]
      }
    }
  },
  "definitions": {
    "google.protobuf.Any": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string",
          "description": "A URL/resource name that uniquely identifies the type of the serialized\nprotocol buffer message. This string must contain at least\none \"/\" character. The last segment of the URL's path must represent\nthe fully qualified name of the type (as in\n`path/google.protobuf.Duration`). The name should be in a canonical form\n(e.g., leading \".\" is not accepted).\n\nIn practice, teams usually precompile into the binary all types that they\nexpect it to use in the context of Any. However, for URLs which use the\nscheme `http`, `https`, or no scheme, one can optionally set up a type\nserver that maps type URLs to message definitions as follows:\n\n* If no scheme is provided, `https` is assumed.\n* An HTTP GET on the URL must yield a [google.protobuf.Type][]\n  value in binary format, or produce an error.\n* Applications are allowed to cache lookup results based on the\n  URL, or have them precompiled into a binary to avoid any\n  lookup. Therefore, binary compatibility needs to be preserved\n  on changes to types. (Use versioned type names to manage\n  breaking changes.)\n\nNote: this functionality is not currently available in the official\nprotobuf release, and it is not used for type URLs beginning with\ntype.googleapis.com. As of May 2023, there are no widely used type server\nimplementations and no plans to implement one.\n\nSchemes other than `http`, `https` (or the empty scheme) might be\nused with implementation specific semantics."
        }
      },
      "additionalProperties": {},
      "description": "`Any` contains an arbitrary serialized protocol buffer message along with a\nURL that describes the type of the serialized message.\n\nProtobuf library provides support to pack/unpack Any values in the form\nof utility functions or additional generated methods of the Any type.\n\nExample 1: Pack and unpack a message in C++.\n\n    Foo foo = ...;\n    Any any;\n    any.PackFrom(foo);\n    ...\n    if (any.UnpackTo(\u0026foo)) {\n      ...\n    }\n\nExample 2: Pack and unpack a message in Java.\n\n    Foo foo = ...;\n    Any any = Any.pack(foo);\n    ...\n    if (any.is(Foo.class)) {\n      foo = any.unpack(Foo.class);\n    }\n    // or ...\n    if (any.isSameTypeAs(Foo.getDefaultInstance())) {\n      foo = any.unpack(Foo.getDefaultInstance());\n    }\n\n Example 3: Pack and unpack a message in Python.\n\n    foo = Foo(...)\n    any = Any()\n    any.Pack(foo)\n    ...\n    if any.Is(Foo.DESCRIPTOR):\n      any.Unpack(foo)\n      ...\n\n Example 4: Pack and unpack a message in Go\n\n     foo := \u0026pb.Foo{...}\n     any, err := anypb.New(foo)\n     if err != nil {\n       ...\n     }\n     ...\n     foo := \u0026pb.Foo{}\n     if err := any.UnmarshalTo(foo); err != nil {\n       ...\n     }\n\nThe pack methods provided by protobuf library will by default use\n'type.googleapis.com/full.type.name' as the type URL and the unpack\nmethods only use the fully qualified type name after the last '/'\nin the type URL, for example \"foo.bar.com/x/y.z\" will yield type\nname \"y.z\".\n\nJSON\n====\nThe JSON representation of an `Any` value uses the regular\nrepresentation of the deserialized, embedded message, with an\nadditional field `@type` which contains the type URL. Example:\n\n    package google.profile;\n    message Person {\n      string first_name = 1;\n      string last_name = 2;\n    }\n\n    {\n      \"@type\": \"type.googleapis.com/google.profile.Person\",\n      \"firstName\": \u003cstring\u003e,\n      \"lastName\": \u003cstring\u003e\n    }\n\nIf the embedded message type is well-known and has a custom JSON\nrepresentation, that representation will be embedded adding a field\n`value` which holds the custom JSON in addition to the `@type`\nfield. Example (for message [google.protobuf.Duration][]):\n\n    {\n      \"@type\": \"type.googleapis.com/google.protobuf.Duration\",\n      \"value\": \"1.212s\"\n    }"
    },
    "google.rpc.Status": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/google.protobuf.Any"
          }
        }
      }
    },
    "protocol.Account": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "format": "byte",
          "title": "account nick name"
        },
        "type": {
          "$ref": "#/definitions/protocol.AccountType"
        },
        "address": {
          "type": "string",
          "format": "byte",
          "title": "the create address"
        },
        "balance": {
          "type": "string",
          "format": "int64",
          "title": "the trx balance"
        },
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Vote"
          },
          "title": "the votes"
        },
        "asset": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "the other asset owned by this account"
        },
        "assetV2": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          },
          "title": "the other asset owned by this account，key is assetId"
        },
        "frozen": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Account.Frozen"
          },
          "title": "the frozen balance for bandwidth"
        },
        "netUsage": {
          "type": "string",
          "format": "int64",
          "title": "bandwidth, get from frozen"
        },
        "acquiredDelegatedFrozenBalanceForBandwidth": {
          "type": "string",
          "format": "int64",
          "title": "Frozen balance provided by other accounts to this account"
        },
        "delegatedFrozenBalanceForBandwidth": {
          "type": "string",
          "format": "int64",
          "title": "Freeze and provide balances to other accounts"
        },
        "oldTronPower": {
          "type": "string",
          "format": "int64"
        },
        "tronPower": {
          "$ref": "#/definitions/protocol.Account.Frozen"
        },
        "assetOptimized": {
          "type": "boolean"
        },
        "createTime": {
          "type": "string",
          "format": "int64",
          "title": "this account create time"
        },
        "latestOprationTime": {
          "type": "string",
          "format": "int64",
          "title": "this last operation time, including transfer, voting and so on. //FIXME fix grammar"
        },
        "allowance": {
          "type": "string",
          "format": "int64",
          "title": "witness block producing allowance"
        },
        "latestWithdrawTime": {
          "type": "string",
          "format": "int64",
          "title": "last withdraw time"
        },
        "code": {
          "type": "string",
          "format": "byte",
          "title": "not used so far"
        },
        "isWitness": {
          "type": "boolean"
        },
        "isCommittee": {
          "type": "boolean"
        },
        "frozenSupply": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Account.Frozen"
          },
          "title": "frozen asset(for asset issuer)"
        },
        "assetIssuedName": {
          "type": "string",
          "format": "byte",
          "title": "asset_issued_name"
        },
        "assetIssuedID": {
          "type": "string",
          "format": "byte"
        },
        "latestAssetOperationTime": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "latestAssetOperationTimeV2": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "freeNetUsage": {
          "type": "string",
          "format": "int64"
        },
        "freeAssetNetUsage": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "freeAssetNetUsageV2": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "latestConsumeTime": {
          "type": "string",
          "format": "int64"
        },
        "latestConsumeFreeTime": {
          "type": "string",
          "format": "int64"
        },
        "accountId": {
          "type": "string",
          "format": "byte",
          "title": "the identity of this account, case insensitive"
        },
        "netWindowSize": {
          "type": "string",
          "format": "int64"
        },
        "netWindowOptimized": {
          "type": "boolean"
        },
        "accountResource": {
          "$ref": "#/definitions/protocol.Account.AccountResource"
        },
        "codeHash": {
          "type": "string",
          "format": "byte"
        },
        "ownerPermission": {
          "$ref": "#/definitions/protocol.Permission"
        },
        "witnessPermission": {
          "$ref": "#/definitions/protocol.Permission"
        },
        "activePermission": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Permission"
          }
        },
        "frozenV2": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Account.FreezeV2"
          }
        },
        "unfrozenV2": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Account.UnFreezeV2"
          }
        },
        "delegatedFrozenV2BalanceForBandwidth": {
          "type": "string",
          "format": "int64"
        },
        "acquiredDelegatedFrozenV2BalanceForBandwidth": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Account"
    },
    "protocol.Account.AccountResource": {
      "type": "object",
      "properties": {
        "energyUsage": {
          "type": "string",
          "format": "int64",
          "title": "energy resource, get from frozen"
        },
        "frozenBalanceForEnergy": {
          "$ref": "#/definitions/protocol.Account.Frozen",
          "title": "the frozen balance for energy"
        },
        "latestConsumeTimeForEnergy": {
          "type": "string",
          "format": "int64"
        },
        "acquiredDelegatedFrozenBalanceForEnergy": {
          "type": "string",
          "format": "int64",
          "title": "Frozen balance provided by other accounts to this account"
        },
        "delegatedFrozenBalanceForEnergy": {
          "type": "string",
          "format": "int64",
          "title": "Frozen balances provided to other accounts"
        },
        "storageLimit": {
          "type": "string",
          "format": "int64",
          "title": "storage resource, get from market"
        },
        "storageUsage": {
          "type": "string",
          "format": "int64"
        },
        "latestExchangeStorageTime": {
          "type": "string",
          "format": "int64"
        },
        "energyWindowSize": {
          "type": "string",
          "format": "int64"
        },
        "delegatedFrozenV2BalanceForEnergy": {
          "type": "string",
          "format": "int64"
        },
        "acquiredDelegatedFrozenV2BalanceForEnergy": {
          "type": "string",
          "format": "int64"
        },
        "energyWindowOptimized": {
          "type": "boolean"
        }
      }
    },
    "protocol.Account.FreezeV2": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protocol.ResourceCode"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.Account.Frozen": {
      "type": "object",
      "properties": {
        "frozenBalance": {
          "type": "string",
          "format": "int64",
          "title": "the frozen trx balance"
        },
        "expireTime": {
          "type": "string",
          "format": "int64",
          "title": "the expire time"
        }
      },
      "title": "frozen balance"
    },
    "protocol.Account.UnFreezeV2": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protocol.ResourceCode"
        },
        "unfreezeAmount": {
          "type": "string",
          "format": "int64"
        },
        "unfreezeExpireTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.AccountBalanceRequest": {
      "type": "object",
      "properties": {
        "accountIdentifier": {
          "$ref": "#/definitions/protocol.AccountIdentifier"
        },
        "blockIdentifier": {
          "$ref": "#/definitions/protocol.BlockBalanceTrace.BlockIdentifier"
        }
      }
    },
    "protocol.AccountBalanceResponse": {
      "type": "object",
      "properties": {
        "balance": {
          "type": "string",
          "format": "int64"
        },
        "blockIdentifier": {
          "$ref": "#/definitions/protocol.BlockBalanceTrace.BlockIdentifier"
        }
      }
    },
    "protocol.AccountCreateContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "accountAddress": {
          "type": "string",
          "format": "byte"
        },
        "type": {
          "$ref": "#/definitions/protocol.AccountType"
        }
      }
    },
    "protocol.AccountId": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string",
          "format": "byte"
        },
        "address": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "AccountId, (name, address) use name, (null, address) use address, (name, null) use name,"
    },
    "protocol.AccountIdentifier": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.AccountNetMessage": {
      "type": "object",
      "properties": {
        "freeNetUsed": {
          "type": "string",
          "format": "int64"
        },
        "freeNetLimit": {
          "type": "string",
          "format": "int64"
        },
        "NetUsed": {
          "type": "string",
          "format": "int64"
        },
        "NetLimit": {
          "type": "string",
          "format": "int64"
        },
        "assetNetUsed": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "assetNetLimit": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "TotalNetLimit": {
          "type": "string",
          "format": "int64"
        },
        "TotalNetWeight": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "deprecated"
    },
    "protocol.AccountPaginated": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/protocol.Account"
        },
        "offset": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.AccountPermissionUpdateContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "owner": {
          "$ref": "#/definitions/protocol.Permission",
          "title": "Empty is invalidate"
        },
        "witness": {
          "$ref": "#/definitions/protocol.Permission",
          "title": "Can be empty"
        },
        "actives": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Permission"
          },
          "title": "Empty is invalidate"
        }
      }
    },
    "protocol.AccountResourceMessage": {
      "type": "object",
      "properties": {
        "freeNetUsed": {
          "type": "string",
          "format": "int64"
        },
        "freeNetLimit": {
          "type": "string",
          "format": "int64"
        },
        "NetUsed": {
          "type": "string",
          "format": "int64"
        },
        "NetLimit": {
          "type": "string",
          "format": "int64"
        },
        "assetNetUsed": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "assetNetLimit": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "TotalNetLimit": {
          "type": "string",
          "format": "int64"
        },
        "TotalNetWeight": {
          "type": "string",
          "format": "int64"
        },
        "TotalTronPowerWeight": {
          "type": "string",
          "format": "int64"
        },
        "tronPowerUsed": {
          "type": "string",
          "format": "int64"
        },
        "tronPowerLimit": {
          "type": "string",
          "format": "int64"
        },
        "EnergyUsed": {
          "type": "string",
          "format": "int64"
        },
        "EnergyLimit": {
          "type": "string",
          "format": "int64"
        },
        "TotalEnergyLimit": {
          "type": "string",
          "format": "int64"
        },
        "TotalEnergyWeight": {
          "type": "string",
          "format": "int64"
        },
        "storageUsed": {
          "type": "string",
          "format": "int64"
        },
        "storageLimit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.AccountType": {
      "type": "string",
      "enum": [
        "Normal",
        "AssetIssue",
        "Contract"
      ],
      "default": "Normal"
    },
    "protocol.AccountUpdateContract": {
      "type": "object",
      "properties": {
        "accountName": {
          "type": "string",
          "format": "byte"
        },
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Update account name. Account name is not unique now."
    },
    "protocol.Address": {
      "type": "object",
      "properties": {
        "host": {
          "type": "string",
          "format": "byte"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "Gossip node address"
    },
    "protocol.AssetIssueContract": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "name": {
          "type": "string",
          "format": "byte"
        },
        "abbr": {
          "type": "string",
          "format": "byte"
        },
        "totalSupply": {
          "type": "string",
          "format": "int64"
        },
        "frozenSupply": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.AssetIssueContract.FrozenSupply"
          }
        },
        "trxNum": {
          "type": "integer",
          "format": "int32"
        },
        "precision": {
          "type": "integer",
          "format": "int32"
        },
        "num": {
          "type": "integer",
          "format": "int32"
        },
        "startTime": {
          "type": "string",
          "format": "int64"
        },
        "endTime": {
          "type": "string",
          "format": "int64"
        },
        "order": {
          "type": "string",
          "format": "int64",
          "title": "useless"
        },
        "voteScore": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string",
          "format": "byte"
        },
        "url": {
          "type": "string",
          "format": "byte"
        },
        "freeAssetNetLimit": {
          "type": "string",
          "format": "int64"
        },
        "publicFreeAssetNetLimit": {
          "type": "string",
          "format": "int64"
        },
        "publicFreeAssetNetUsage": {
          "type": "string",
          "format": "int64"
        },
        "publicLatestFreeNetTime": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.AssetIssueContract.FrozenSupply": {
      "type": "object",
      "properties": {
        "frozenAmount": {
          "type": "string",
          "format": "int64"
        },
        "frozenDays": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.AssetIssueList": {
      "type": "object",
      "properties": {
        "assetIssue": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.AssetIssueContract"
          }
        }
      }
    },
    "protocol.Block": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Transaction"
          }
        },
        "blockHeader": {
          "$ref": "#/definitions/protocol.BlockHeader"
        }
      },
      "title": "block"
    },
    "protocol.BlockBalanceTrace": {
      "type": "object",
      "properties": {
        "blockIdentifier": {
          "$ref": "#/definitions/protocol.BlockBalanceTrace.BlockIdentifier"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "transactionBalanceTrace": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionBalanceTrace"
          },
          "title": "BlockIdentifier parent_block_identifier = 4;"
        }
      }
    },
    "protocol.BlockBalanceTrace.BlockIdentifier": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte"
        },
        "number": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.BlockExtention": {
      "type": "object",
      "properties": {
        "transactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionExtention"
          }
        },
        "blockHeader": {
          "$ref": "#/definitions/protocol.BlockHeader"
        },
        "blockid": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.BlockHeader": {
      "type": "object",
      "properties": {
        "rawData": {
          "$ref": "#/definitions/protocol.BlockHeader.raw"
        },
        "witnessSignature": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.BlockHeader.raw": {
      "type": "object",
      "properties": {
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "txTrieRoot": {
          "type": "string",
          "format": "byte"
        },
        "parentHash": {
          "type": "string",
          "format": "byte"
        },
        "number": {
          "type": "string",
          "format": "int64",
          "title": "bytes nonce = 5;\nbytes difficulty = 6;"
        },
        "witnessId": {
          "type": "string",
          "format": "int64"
        },
        "witnessAddress": {
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        },
        "accountStateRoot": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.BlockLimit": {
      "type": "object",
      "properties": {
        "startNum": {
          "type": "string",
          "format": "int64"
        },
        "endNum": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.BlockList": {
      "type": "object",
      "properties": {
        "block": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Block"
          }
        }
      }
    },
    "protocol.BlockListExtention": {
      "type": "object",
      "properties": {
        "block": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.BlockExtention"
          }
        }
      }
    },
    "protocol.BlockReference": {
      "type": "object",
      "properties": {
        "blockNum": {
          "type": "string",
          "format": "int64"
        },
        "blockHash": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.BytesMessage": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.CanDelegatedMaxSizeResponseMessage": {
      "type": "object",
      "properties": {
        "maxSize": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.CanWithdrawUnfreezeAmountResponseMessage": {
      "type": "object",
      "properties": {
        "amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.ChainParameters": {
      "type": "object",
      "properties": {
        "chainParameter": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.ChainParameters.ChainParameter"
          }
        }
      }
    },
    "protocol.ChainParameters.ChainParameter": {
      "type": "object",
      "properties": {
        "key": {
          "type": "string"
        },
        "value": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.ContractState": {
      "type": "object",
      "properties": {
        "energyUsage": {
          "type": "string",
          "format": "int64"
        },
        "energyFactor": {
          "type": "string",
          "format": "int64"
        },
        "updateCycle": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.DecryptNotes": {
      "type": "object",
      "properties": {
        "noteTxs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.DecryptNotes.NoteTx"
          }
        }
      }
    },
    "protocol.DecryptNotes.NoteTx": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/protocol.Note"
        },
        "txid": {
          "type": "string",
          "format": "byte",
          "title": "transaction id =  sha256(transaction.rowdata)"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "title": "the index of note in receive"
        }
      }
    },
    "protocol.DecryptNotesMarked": {
      "type": "object",
      "properties": {
        "noteTxs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.DecryptNotesMarked.NoteTx"
          }
        }
      }
    },
    "protocol.DecryptNotesMarked.NoteTx": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/protocol.Note"
        },
        "txid": {
          "type": "string",
          "format": "byte",
          "title": "transaction id =  sha256(transaction.rowdata)"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "title": "the index of note in receive"
        },
        "isSpend": {
          "type": "boolean"
        }
      }
    },
    "protocol.DecryptNotesTRC20": {
      "type": "object",
      "properties": {
        "noteTxs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.DecryptNotesTRC20.NoteTx"
          }
        }
      }
    },
    "protocol.DecryptNotesTRC20.NoteTx": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/protocol.Note"
        },
        "position": {
          "type": "string",
          "format": "int64"
        },
        "isSpent": {
          "type": "boolean"
        },
        "txid": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "integer",
          "format": "int32",
          "title": "the index of note in txid"
        },
        "toAmount": {
          "type": "string"
        },
        "transparentToAddress": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.DelegatedResource": {
      "type": "object",
      "properties": {
        "from": {
          "type": "string",
          "format": "byte"
        },
        "to": {
          "type": "string",
          "format": "byte"
        },
        "frozenBalanceForBandwidth": {
          "type": "string",
          "format": "int64"
        },
        "frozenBalanceForEnergy": {
          "type": "string",
          "format": "int64"
        },
        "expireTimeForBandwidth": {
          "type": "string",
          "format": "int64"
        },
        "expireTimeForEnergy": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.DelegatedResourceAccountIndex": {
      "type": "object",
      "properties": {
        "account": {
          "type": "string",
          "format": "byte"
        },
        "fromAccounts": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "toAccounts": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.DelegatedResourceList": {
      "type": "object",
      "properties": {
        "delegatedResource": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.DelegatedResource"
          }
        }
      }
    },
    "protocol.DiversifierMessage": {
      "type": "object",
      "properties": {
        "d": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.DynamicProperties": {
      "type": "object",
      "properties": {
        "lastSolidityBlockNum": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "DynamicProperties"
    },
    "protocol.EmptyMessage": {
      "type": "object"
    },
    "protocol.EstimateEnergyMessage": {
      "type": "object",
      "properties": {
        "result": {
          "$ref": "#/definitions/protocol.Return"
        },
        "energyRequired": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.Exchange": {
      "type": "object",
      "properties": {
        "exchangeId": {
          "type": "string",
          "format": "int64"
        },
        "creatorAddress": {
          "type": "string",
          "format": "byte"
        },
        "createTime": {
          "type": "string",
          "format": "int64"
        },
        "firstTokenId": {
          "type": "string",
          "format": "byte"
        },
        "firstTokenBalance": {
          "type": "string",
          "format": "int64"
        },
        "secondTokenId": {
          "type": "string",
          "format": "byte"
        },
        "secondTokenBalance": {
          "type": "string",
          "format": "int64"
        }
      },
      "title": "Exchange"
    },
    "protocol.ExchangeList": {
      "type": "object",
      "properties": {
        "exchanges": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Exchange"
          }
        }
      }
    },
    "protocol.ExpandedSpendingKeyMessage": {
      "type": "object",
      "properties": {
        "ask": {
          "type": "string",
          "format": "byte"
        },
        "nsk": {
          "type": "string",
          "format": "byte"
        },
        "ovk": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.FreezeBalanceContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "frozenBalance": {
          "type": "string",
          "format": "int64"
        },
        "frozenDuration": {
          "type": "string",
          "format": "int64"
        },
        "resource": {
          "$ref": "#/definitions/protocol.ResourceCode"
        },
        "receiverAddress": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.GetAvailableUnfreezeCountResponseMessage": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.IncomingViewingKeyMessage": {
      "type": "object",
      "properties": {
        "ivk": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.IncrementalMerkleTree": {
      "type": "object",
      "properties": {
        "left": {
          "$ref": "#/definitions/protocol.PedersenHash"
        },
        "right": {
          "$ref": "#/definitions/protocol.PedersenHash"
        },
        "parents": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.PedersenHash"
          }
        }
      }
    },
    "protocol.IncrementalMerkleVoucher": {
      "type": "object",
      "properties": {
        "tree": {
          "$ref": "#/definitions/protocol.IncrementalMerkleTree"
        },
        "filled": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.PedersenHash"
          }
        },
        "cursor": {
          "$ref": "#/definitions/protocol.IncrementalMerkleTree"
        },
        "cursorDepth": {
          "type": "string",
          "format": "int64"
        },
        "rt": {
          "type": "string",
          "format": "byte"
        },
        "outputPoint": {
          "$ref": "#/definitions/protocol.OutputPoint"
        }
      }
    },
    "protocol.IncrementalMerkleVoucherInfo": {
      "type": "object",
      "properties": {
        "vouchers": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.IncrementalMerkleVoucher"
          }
        },
        "paths": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        }
      }
    },
    "protocol.InternalTransaction": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte",
          "description": "internalTransaction identity, the root InternalTransaction hash\nshould equals to root transaction id."
        },
        "callerAddress": {
          "type": "string",
          "format": "byte",
          "title": "the one send trx (TBD: or token) via function"
        },
        "transferToAddress": {
          "type": "string",
          "format": "byte",
          "title": "the one recieve trx (TBD: or token) via function"
        },
        "callValueInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.InternalTransaction.CallValueInfo"
          }
        },
        "note": {
          "type": "string",
          "format": "byte"
        },
        "rejected": {
          "type": "boolean"
        },
        "extra": {
          "type": "string"
        }
      }
    },
    "protocol.InternalTransaction.CallValueInfo": {
      "type": "object",
      "properties": {
        "callValue": {
          "type": "string",
          "format": "int64",
          "title": "trx (TBD: or token) value"
        },
        "tokenId": {
          "type": "string",
          "title": "TBD: tokenName, trx should be empty"
        }
      }
    },
    "protocol.Key": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "weight": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.MarketOrder": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string",
          "format": "byte"
        },
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "createTime": {
          "type": "string",
          "format": "int64"
        },
        "sellTokenId": {
          "type": "string",
          "format": "byte"
        },
        "sellTokenQuantity": {
          "type": "string",
          "format": "int64"
        },
        "buyTokenId": {
          "type": "string",
          "format": "byte"
        },
        "buyTokenQuantity": {
          "type": "string",
          "format": "int64",
          "title": "min to receive"
        },
        "sellTokenQuantityRemain": {
          "type": "string",
          "format": "int64"
        },
        "sellTokenQuantityReturn": {
          "type": "string",
          "format": "int64",
          "title": "When state != ACTIVE and sell_token_quantity_return !=0,\nit means that some sell tokens are returned to the account due to insufficient remaining amount"
        },
        "state": {
          "$ref": "#/definitions/protocol.MarketOrder.State"
        },
        "prev": {
          "type": "string",
          "format": "byte"
        },
        "next": {
          "type": "string",
          "format": "byte"
        }
      },
      "title": "market"
    },
    "protocol.MarketOrder.State": {
      "type": "string",
      "enum": [
        "ACTIVE",
        "INACTIVE",
        "CANCELED"
      ],
      "default": "ACTIVE"
    },
    "protocol.MarketOrderDetail": {
      "type": "object",
      "properties": {
        "makerOrderId": {
          "type": "string",
          "format": "byte"
        },
        "takerOrderId": {
          "type": "string",
          "format": "byte"
        },
        "fillSellQuantity": {
          "type": "string",
          "format": "int64"
        },
        "fillBuyQuantity": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.MarketOrderList": {
      "type": "object",
      "properties": {
        "orders": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MarketOrder"
          }
        }
      }
    },
    "protocol.MarketOrderPair": {
      "type": "object",
      "properties": {
        "sellTokenId": {
          "type": "string",
          "format": "byte"
        },
        "buyTokenId": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.MarketOrderPairList": {
      "type": "object",
      "properties": {
        "orderPair": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MarketOrderPair"
          }
        }
      }
    },
    "protocol.MarketPrice": {
      "type": "object",
      "properties": {
        "sellTokenQuantity": {
          "type": "string",
          "format": "int64"
        },
        "buyTokenQuantity": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.MarketPriceList": {
      "type": "object",
      "properties": {
        "sellTokenId": {
          "type": "string",
          "format": "byte"
        },
        "buyTokenId": {
          "type": "string",
          "format": "byte"
        },
        "prices": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MarketPrice"
          }
        }
      }
    },
    "protocol.MetricsInfo": {
      "type": "object",
      "properties": {
        "interval": {
          "type": "string",
          "format": "int64"
        },
        "node": {
          "$ref": "#/definitions/protocol.MetricsInfo.NodeInfo"
        },
        "blockchain": {
          "$ref": "#/definitions/protocol.MetricsInfo.BlockChainInfo"
        },
        "net": {
          "$ref": "#/definitions/protocol.MetricsInfo.NetInfo"
        }
      }
    },
    "protocol.MetricsInfo.BlockChainInfo": {
      "type": "object",
      "properties": {
        "headBlockNum": {
          "type": "string",
          "format": "int64"
        },
        "headBlockTimestamp": {
          "type": "string",
          "format": "int64"
        },
        "headBlockHash": {
          "type": "string"
        },
        "forkCount": {
          "type": "integer",
          "format": "int32"
        },
        "failForkCount": {
          "type": "integer",
          "format": "int32"
        },
        "blockProcessTime": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "tps": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "transactionCacheSize": {
          "type": "integer",
          "format": "int32"
        },
        "missedTransaction": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "witnesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MetricsInfo.BlockChainInfo.Witness"
          }
        },
        "failProcessBlockNum": {
          "type": "string",
          "format": "int64"
        },
        "failProcessBlockReason": {
          "type": "string"
        },
        "dupWitness": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MetricsInfo.BlockChainInfo.DupWitness"
          }
        }
      }
    },
    "protocol.MetricsInfo.BlockChainInfo.DupWitness": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "blockNum": {
          "type": "string",
          "format": "int64"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.MetricsInfo.BlockChainInfo.Witness": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.MetricsInfo.NetInfo": {
      "type": "object",
      "properties": {
        "errorProtoCount": {
          "type": "integer",
          "format": "int32"
        },
        "api": {
          "$ref": "#/definitions/protocol.MetricsInfo.NetInfo.ApiInfo"
        },
        "connectionCount": {
          "type": "integer",
          "format": "int32"
        },
        "validConnectionCount": {
          "type": "integer",
          "format": "int32"
        },
        "tcpInTraffic": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "tcpOutTraffic": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "disconnectionCount": {
          "type": "integer",
          "format": "int32"
        },
        "disconnectionDetail": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MetricsInfo.NetInfo.DisconnectionDetailInfo"
          }
        },
        "udpInTraffic": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "udpOutTraffic": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "latency": {
          "$ref": "#/definitions/protocol.MetricsInfo.NetInfo.LatencyInfo"
        }
      }
    },
    "protocol.MetricsInfo.NetInfo.ApiInfo": {
      "type": "object",
      "properties": {
        "qps": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "failQps": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "outTraffic": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "detail": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MetricsInfo.NetInfo.ApiInfo.ApiDetailInfo"
          }
        }
      }
    },
    "protocol.MetricsInfo.NetInfo.ApiInfo.ApiDetailInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "qps": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "failQps": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        },
        "outTraffic": {
          "$ref": "#/definitions/protocol.MetricsInfo.RateInfo"
        }
      }
    },
    "protocol.MetricsInfo.NetInfo.DisconnectionDetailInfo": {
      "type": "object",
      "properties": {
        "reason": {
          "type": "string"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.MetricsInfo.NetInfo.LatencyInfo": {
      "type": "object",
      "properties": {
        "top99": {
          "type": "integer",
          "format": "int32"
        },
        "top95": {
          "type": "integer",
          "format": "int32"
        },
        "top75": {
          "type": "integer",
          "format": "int32"
        },
        "totalCount": {
          "type": "integer",
          "format": "int32"
        },
        "delay1S": {
          "type": "integer",
          "format": "int32"
        },
        "delay2S": {
          "type": "integer",
          "format": "int32"
        },
        "delay3S": {
          "type": "integer",
          "format": "int32"
        },
        "detail": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MetricsInfo.NetInfo.LatencyInfo.LatencyDetailInfo"
          }
        }
      }
    },
    "protocol.MetricsInfo.NetInfo.LatencyInfo.LatencyDetailInfo": {
      "type": "object",
      "properties": {
        "witness": {
          "type": "string"
        },
        "top99": {
          "type": "integer",
          "format": "int32"
        },
        "top95": {
          "type": "integer",
          "format": "int32"
        },
        "top75": {
          "type": "integer",
          "format": "int32"
        },
        "count": {
          "type": "integer",
          "format": "int32"
        },
        "delay1S": {
          "type": "integer",
          "format": "int32"
        },
        "delay2S": {
          "type": "integer",
          "format": "int32"
        },
        "delay3S": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.MetricsInfo.NodeInfo": {
      "type": "object",
      "properties": {
        "ip": {
          "type": "string"
        },
        "nodeType": {
          "type": "integer",
          "format": "int32"
        },
        "version": {
          "type": "string"
        },
        "backupStatus": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.MetricsInfo.RateInfo": {
      "type": "object",
      "properties": {
        "count": {
          "type": "string",
          "format": "int64"
        },
        "meanRate": {
          "type": "number",
          "format": "double"
        },
        "oneMinuteRate": {
          "type": "number",
          "format": "double"
        },
        "fiveMinuteRate": {
          "type": "number",
          "format": "double"
        },
        "fifteenMinuteRate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "protocol.Node": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/protocol.Address"
        }
      },
      "title": "Gossip node"
    },
    "protocol.NodeInfo": {
      "type": "object",
      "properties": {
        "beginSyncNum": {
          "type": "string",
          "format": "int64"
        },
        "block": {
          "type": "string"
        },
        "solidityBlock": {
          "type": "string"
        },
        "currentConnectCount": {
          "type": "integer",
          "format": "int32",
          "title": "connect information"
        },
        "activeConnectCount": {
          "type": "integer",
          "format": "int32"
        },
        "passiveConnectCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalFlow": {
          "type": "string",
          "format": "int64"
        },
        "peerInfoList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.NodeInfo.PeerInfo"
          }
        },
        "configNodeInfo": {
          "$ref": "#/definitions/protocol.NodeInfo.ConfigNodeInfo"
        },
        "machineInfo": {
          "$ref": "#/definitions/protocol.NodeInfo.MachineInfo"
        },
        "cheatWitnessInfoMap": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      }
    },
    "protocol.NodeInfo.ConfigNodeInfo": {
      "type": "object",
      "properties": {
        "codeVersion": {
          "type": "string"
        },
        "p2pVersion": {
          "type": "string"
        },
        "listenPort": {
          "type": "integer",
          "format": "int32"
        },
        "discoverEnable": {
          "type": "boolean"
        },
        "activeNodeSize": {
          "type": "integer",
          "format": "int32"
        },
        "passiveNodeSize": {
          "type": "integer",
          "format": "int32"
        },
        "sendNodeSize": {
          "type": "integer",
          "format": "int32"
        },
        "maxConnectCount": {
          "type": "integer",
          "format": "int32"
        },
        "sameIpMaxConnectCount": {
          "type": "integer",
          "format": "int32"
        },
        "backupListenPort": {
          "type": "integer",
          "format": "int32"
        },
        "backupMemberSize": {
          "type": "integer",
          "format": "int32"
        },
        "backupPriority": {
          "type": "integer",
          "format": "int32"
        },
        "dbVersion": {
          "type": "integer",
          "format": "int32"
        },
        "minParticipationRate": {
          "type": "integer",
          "format": "int32"
        },
        "supportConstant": {
          "type": "boolean"
        },
        "minTimeRatio": {
          "type": "number",
          "format": "double"
        },
        "maxTimeRatio": {
          "type": "number",
          "format": "double"
        },
        "allowCreationOfContracts": {
          "type": "string",
          "format": "int64"
        },
        "allowAdaptiveEnergy": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.NodeInfo.MachineInfo": {
      "type": "object",
      "properties": {
        "threadCount": {
          "type": "integer",
          "format": "int32"
        },
        "deadLockThreadCount": {
          "type": "integer",
          "format": "int32"
        },
        "cpuCount": {
          "type": "integer",
          "format": "int32"
        },
        "totalMemory": {
          "type": "string",
          "format": "int64"
        },
        "freeMemory": {
          "type": "string",
          "format": "int64"
        },
        "cpuRate": {
          "type": "number",
          "format": "double"
        },
        "javaVersion": {
          "type": "string"
        },
        "osName": {
          "type": "string"
        },
        "jvmTotalMemory": {
          "type": "string",
          "format": "int64"
        },
        "jvmFreeMemory": {
          "type": "string",
          "format": "int64"
        },
        "processCpuRate": {
          "type": "number",
          "format": "double"
        },
        "memoryDescInfoList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.NodeInfo.MachineInfo.MemoryDescInfo"
          }
        },
        "deadLockThreadInfoList": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.NodeInfo.MachineInfo.DeadLockThreadInfo"
          }
        }
      }
    },
    "protocol.NodeInfo.MachineInfo.DeadLockThreadInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "lockName": {
          "type": "string"
        },
        "lockOwner": {
          "type": "string"
        },
        "state": {
          "type": "string"
        },
        "blockTime": {
          "type": "string",
          "format": "int64"
        },
        "waitTime": {
          "type": "string",
          "format": "int64"
        },
        "stackTrace": {
          "type": "string"
        }
      }
    },
    "protocol.NodeInfo.MachineInfo.MemoryDescInfo": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "initSize": {
          "type": "string",
          "format": "int64"
        },
        "useSize": {
          "type": "string",
          "format": "int64"
        },
        "maxSize": {
          "type": "string",
          "format": "int64"
        },
        "useRate": {
          "type": "number",
          "format": "double"
        }
      }
    },
    "protocol.NodeInfo.PeerInfo": {
      "type": "object",
      "properties": {
        "lastSyncBlock": {
          "type": "string"
        },
        "remainNum": {
          "type": "string",
          "format": "int64"
        },
        "lastBlockUpdateTime": {
          "type": "string",
          "format": "int64"
        },
        "syncFlag": {
          "type": "boolean"
        },
        "headBlockTimeWeBothHave": {
          "type": "string",
          "format": "int64"
        },
        "needSyncFromPeer": {
          "type": "boolean"
        },
        "needSyncFromUs": {
          "type": "boolean"
        },
        "host": {
          "type": "string"
        },
        "port": {
          "type": "integer",
          "format": "int32"
        },
        "nodeId": {
          "type": "string"
        },
        "connectTime": {
          "type": "string",
          "format": "int64"
        },
        "avgLatency": {
          "type": "number",
          "format": "double"
        },
        "syncToFetchSize": {
          "type": "integer",
          "format": "int32"
        },
        "syncToFetchSizePeekNum": {
          "type": "string",
          "format": "int64"
        },
        "syncBlockRequestedSize": {
          "type": "integer",
          "format": "int32"
        },
        "unFetchSynNum": {
          "type": "string",
          "format": "int64"
        },
        "blockInPorcSize": {
          "type": "integer",
          "format": "int32"
        },
        "headBlockWeBothHave": {
          "type": "string"
        },
        "isActive": {
          "type": "boolean"
        },
        "score": {
          "type": "integer",
          "format": "int32"
        },
        "nodeCount": {
          "type": "integer",
          "format": "int32"
        },
        "inFlow": {
          "type": "string",
          "format": "int64"
        },
        "disconnectTimes": {
          "type": "integer",
          "format": "int32"
        },
        "localDisconnectReason": {
          "type": "string"
        },
        "remoteDisconnectReason": {
          "type": "string"
        }
      }
    },
    "protocol.NodeList": {
      "type": "object",
      "properties": {
        "nodes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Node"
          }
        }
      },
      "title": "Gossip node list"
    },
    "protocol.Note": {
      "type": "object",
      "properties": {
        "value": {
          "type": "string",
          "format": "int64"
        },
        "paymentAddress": {
          "type": "string"
        },
        "rcm": {
          "type": "string",
          "format": "byte",
          "title": "random 32"
        },
        "memo": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.NullifierResult": {
      "type": "object",
      "properties": {
        "isSpent": {
          "type": "boolean"
        }
      }
    },
    "protocol.NumberMessage": {
      "type": "object",
      "properties": {
        "num": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.OutputPoint": {
      "type": "object",
      "properties": {
        "hash": {
          "type": "string",
          "format": "byte"
        },
        "index": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.PaginatedMessage": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "string",
          "format": "int64"
        },
        "limit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.ParticipateAssetIssueContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "toAddress": {
          "type": "string",
          "format": "byte"
        },
        "assetName": {
          "type": "string",
          "format": "byte",
          "description": "this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format."
        },
        "amount": {
          "type": "string",
          "format": "int64",
          "title": "the amount of drops"
        }
      }
    },
    "protocol.PaymentAddressMessage": {
      "type": "object",
      "properties": {
        "d": {
          "$ref": "#/definitions/protocol.DiversifierMessage"
        },
        "pkD": {
          "type": "string",
          "format": "byte"
        },
        "paymentAddress": {
          "type": "string"
        }
      }
    },
    "protocol.PedersenHash": {
      "type": "object",
      "properties": {
        "content": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.Permission": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protocol.Permission.PermissionType"
        },
        "id": {
          "type": "integer",
          "format": "int32",
          "title": "Owner id=0, Witness id=1, Active id start by 2"
        },
        "permissionName": {
          "type": "string"
        },
        "threshold": {
          "type": "string",
          "format": "int64"
        },
        "parentId": {
          "type": "integer",
          "format": "int32"
        },
        "operations": {
          "type": "string",
          "format": "byte",
          "title": "1 bit 1 contract"
        },
        "keys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Key"
          }
        }
      }
    },
    "protocol.Permission.PermissionType": {
      "type": "string",
      "enum": [
        "Owner",
        "Witness",
        "Active"
      ],
      "default": "Owner"
    },
    "protocol.PricesResponseMessage": {
      "type": "object",
      "properties": {
        "prices": {
          "type": "string"
        }
      }
    },
    "protocol.Proposal": {
      "type": "object",
      "properties": {
        "proposalId": {
          "type": "string",
          "format": "int64"
        },
        "proposerAddress": {
          "type": "string",
          "format": "byte"
        },
        "parameters": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        },
        "expirationTime": {
          "type": "string",
          "format": "int64"
        },
        "createTime": {
          "type": "string",
          "format": "int64"
        },
        "approvals": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "state": {
          "$ref": "#/definitions/protocol.Proposal.State"
        }
      },
      "title": "Proposal"
    },
    "protocol.Proposal.State": {
      "type": "string",
      "enum": [
        "PENDING",
        "DISAPPROVED",
        "APPROVED",
        "CANCELED"
      ],
      "default": "PENDING"
    },
    "protocol.ProposalList": {
      "type": "object",
      "properties": {
        "proposals": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Proposal"
          }
        }
      }
    },
    "protocol.ReceiveDescription": {
      "type": "object",
      "properties": {
        "valueCommitment": {
          "type": "string",
          "format": "byte"
        },
        "noteCommitment": {
          "type": "string",
          "format": "byte"
        },
        "epk": {
          "type": "string",
          "format": "byte",
          "title": "for Encryption"
        },
        "cEnc": {
          "type": "string",
          "format": "byte",
          "title": "Encryption for incoming, decrypt it with ivk"
        },
        "cOut": {
          "type": "string",
          "format": "byte",
          "title": "Encryption for audit, decrypt it with ovk"
        },
        "zkproof": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.ReceiveNote": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/protocol.Note"
        }
      }
    },
    "protocol.ResourceCode": {
      "type": "string",
      "enum": [
        "BANDWIDTH",
        "ENERGY",
        "TRON_POWER"
      ],
      "default": "BANDWIDTH"
    },
    "protocol.ResourceReceipt": {
      "type": "object",
      "properties": {
        "energyUsage": {
          "type": "string",
          "format": "int64"
        },
        "energyFee": {
          "type": "string",
          "format": "int64"
        },
        "originEnergyUsage": {
          "type": "string",
          "format": "int64"
        },
        "energyUsageTotal": {
          "type": "string",
          "format": "int64"
        },
        "netUsage": {
          "type": "string",
          "format": "int64"
        },
        "netFee": {
          "type": "string",
          "format": "int64"
        },
        "result": {
          "$ref": "#/definitions/protocol.Transaction.Result.contractResult"
        },
        "energyPenaltyTotal": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.Return": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "code": {
          "$ref": "#/definitions/protocol.Return.response_code"
        },
        "message": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.Return.response_code": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "SIGERROR",
        "CONTRACT_VALIDATE_ERROR",
        "CONTRACT_EXE_ERROR",
        "BANDWITH_ERROR",
        "DUP_TRANSACTION_ERROR",
        "TAPOS_ERROR",
        "TOO_BIG_TRANSACTION_ERROR",
        "TRANSACTION_EXPIRATION_ERROR",
        "SERVER_BUSY",
        "NO_CONNECTION",
        "NOT_ENOUGH_EFFECTIVE_CONNECTION",
        "BLOCK_UNSOLIDIFIED",
        "OTHER_ERROR"
      ],
      "default": "SUCCESS",
      "title": "- SIGERROR: error in signature"
    },
    "protocol.SetAccountIdContract": {
      "type": "object",
      "properties": {
        "accountId": {
          "type": "string",
          "format": "byte"
        },
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        }
      },
      "description": "Set account id if the account has no id. Account id is unique and case insensitive."
    },
    "protocol.ShieldedAddressInfo": {
      "type": "object",
      "properties": {
        "sk": {
          "type": "string",
          "format": "byte"
        },
        "ask": {
          "type": "string",
          "format": "byte"
        },
        "nsk": {
          "type": "string",
          "format": "byte"
        },
        "ovk": {
          "type": "string",
          "format": "byte"
        },
        "ak": {
          "type": "string",
          "format": "byte"
        },
        "nk": {
          "type": "string",
          "format": "byte"
        },
        "ivk": {
          "type": "string",
          "format": "byte"
        },
        "d": {
          "type": "string",
          "format": "byte"
        },
        "pkD": {
          "type": "string",
          "format": "byte"
        },
        "paymentAddress": {
          "type": "string"
        }
      }
    },
    "protocol.ShieldedTRC20Parameters": {
      "type": "object",
      "properties": {
        "spendDescription": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.SpendDescription"
          }
        },
        "receiveDescription": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.ReceiveDescription"
          }
        },
        "bindingSignature": {
          "type": "string",
          "format": "byte"
        },
        "messageHash": {
          "type": "string",
          "format": "byte"
        },
        "triggerContractInput": {
          "type": "string"
        },
        "parameterType": {
          "type": "string"
        }
      }
    },
    "protocol.SmartContract": {
      "type": "object",
      "properties": {
        "originAddress": {
          "type": "string",
          "format": "byte"
        },
        "contractAddress": {
          "type": "string",
          "format": "byte"
        },
        "abi": {
          "$ref": "#/definitions/protocol.SmartContract.ABI"
        },
        "bytecode": {
          "type": "string",
          "format": "byte"
        },
        "callValue": {
          "type": "string",
          "format": "int64"
        },
        "consumeUserResourcePercent": {
          "type": "string",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "originEnergyLimit": {
          "type": "string",
          "format": "int64"
        },
        "codeHash": {
          "type": "string",
          "format": "byte"
        },
        "trxHash": {
          "type": "string",
          "format": "byte"
        },
        "version": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.SmartContract.ABI": {
      "type": "object",
      "properties": {
        "entrys": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.SmartContract.ABI.Entry"
          }
        }
      }
    },
    "protocol.SmartContract.ABI.Entry": {
      "type": "object",
      "properties": {
        "anonymous": {
          "type": "boolean"
        },
        "constant": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "inputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.SmartContract.ABI.Entry.Param"
          }
        },
        "outputs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.SmartContract.ABI.Entry.Param"
          }
        },
        "type": {
          "$ref": "#/definitions/protocol.SmartContract.ABI.Entry.EntryType"
        },
        "payable": {
          "type": "boolean"
        },
        "stateMutability": {
          "$ref": "#/definitions/protocol.SmartContract.ABI.Entry.StateMutabilityType"
        }
      }
    },
    "protocol.SmartContract.ABI.Entry.EntryType": {
      "type": "string",
      "enum": [
        "UnknownEntryType",
        "Constructor",
        "Function",
        "Event",
        "Fallback",
        "Receive",
        "Error"
      ],
      "default": "UnknownEntryType"
    },
    "protocol.SmartContract.ABI.Entry.Param": {
      "type": "object",
      "properties": {
        "indexed": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "title": "SolidityType type = 3;"
        }
      }
    },
    "protocol.SmartContract.ABI.Entry.StateMutabilityType": {
      "type": "string",
      "enum": [
        "UnknownMutabilityType",
        "Pure",
        "View",
        "Nonpayable",
        "Payable"
      ],
      "default": "UnknownMutabilityType"
    },
    "protocol.SmartContractDataWrapper": {
      "type": "object",
      "properties": {
        "smartContract": {
          "$ref": "#/definitions/protocol.SmartContract"
        },
        "runtimecode": {
          "type": "string",
          "format": "byte"
        },
        "contractState": {
          "$ref": "#/definitions/protocol.ContractState"
        }
      }
    },
    "protocol.SpendDescription": {
      "type": "object",
      "properties": {
        "valueCommitment": {
          "type": "string",
          "format": "byte"
        },
        "anchor": {
          "type": "string",
          "format": "byte",
          "title": "merkle root"
        },
        "nullifier": {
          "type": "string",
          "format": "byte",
          "title": "used for check double spend"
        },
        "rk": {
          "type": "string",
          "format": "byte",
          "title": "used for check spend authority signature"
        },
        "zkproof": {
          "type": "string",
          "format": "byte"
        },
        "spendAuthoritySignature": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.SpendNote": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/protocol.Note"
        },
        "alpha": {
          "type": "string",
          "format": "byte",
          "title": "random number for spend authority signature"
        },
        "voucher": {
          "$ref": "#/definitions/protocol.IncrementalMerkleVoucher"
        },
        "path": {
          "type": "string",
          "format": "byte",
          "title": "path for cm from leaf to root in merkle tree"
        }
      }
    },
    "protocol.SpendNoteTRC20": {
      "type": "object",
      "properties": {
        "note": {
          "$ref": "#/definitions/protocol.Note"
        },
        "alpha": {
          "type": "string",
          "format": "byte"
        },
        "root": {
          "type": "string",
          "format": "byte"
        },
        "path": {
          "type": "string",
          "format": "byte"
        },
        "pos": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.SpendResult": {
      "type": "object",
      "properties": {
        "result": {
          "type": "boolean"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "protocol.Transaction": {
      "type": "object",
      "properties": {
        "rawData": {
          "$ref": "#/definitions/protocol.Transaction.raw"
        },
        "signature": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          },
          "title": "only support size = 1,  repeated list here for muti-sig extension"
        },
        "ret": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Transaction.Result"
          }
        }
      }
    },
    "protocol.Transaction.Contract": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/protocol.Transaction.Contract.ContractType"
        },
        "parameter": {
          "$ref": "#/definitions/google.protobuf.Any"
        },
        "provider": {
          "type": "string",
          "format": "byte"
        },
        "ContractName": {
          "type": "string",
          "format": "byte"
        },
        "PermissionId": {
          "type": "integer",
          "format": "int32"
        }
      }
    },
    "protocol.Transaction.Contract.ContractType": {
      "type": "string",
      "enum": [
        "AccountCreateContract",
        "TransferContract",
        "TransferAssetContract",
        "VoteAssetContract",
        "VoteWitnessContract",
        "WitnessCreateContract",
        "AssetIssueContract",
        "WitnessUpdateContract",
        "ParticipateAssetIssueContract",
        "AccountUpdateContract",
        "FreezeBalanceContract",
        "UnfreezeBalanceContract",
        "WithdrawBalanceContract",
        "UnfreezeAssetContract",
        "UpdateAssetContract",
        "ProposalCreateContract",
        "ProposalApproveContract",
        "ProposalDeleteContract",
        "SetAccountIdContract",
        "CustomContract",
        "CreateSmartContract",
        "TriggerSmartContract",
        "GetContract",
        "UpdateSettingContract",
        "ExchangeCreateContract",
        "ExchangeInjectContract",
        "ExchangeWithdrawContract",
        "ExchangeTransactionContract",
        "UpdateEnergyLimitContract",
        "AccountPermissionUpdateContract",
        "ClearABIContract",
        "UpdateBrokerageContract",
        "ShieldedTransferContract",
        "MarketSellAssetContract",
        "MarketCancelOrderContract",
        "FreezeBalanceV2Contract",
        "UnfreezeBalanceV2Contract",
        "WithdrawExpireUnfreezeContract",
        "DelegateResourceContract",
        "UnDelegateResourceContract",
        "CancelAllUnfreezeV2Contract"
      ],
      "default": "AccountCreateContract"
    },
    "protocol.Transaction.Result": {
      "type": "object",
      "properties": {
        "fee": {
          "type": "string",
          "format": "int64"
        },
        "ret": {
          "$ref": "#/definitions/protocol.Transaction.Result.code"
        },
        "contractRet": {
          "$ref": "#/definitions/protocol.Transaction.Result.contractResult"
        },
        "assetIssueID": {
          "type": "string"
        },
        "withdrawAmount": {
          "type": "string",
          "format": "int64"
        },
        "unfreezeAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeReceivedAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeInjectAnotherAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeWithdrawAnotherAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeId": {
          "type": "string",
          "format": "int64"
        },
        "shieldedTransactionFee": {
          "type": "string",
          "format": "int64"
        },
        "orderId": {
          "type": "string",
          "format": "byte"
        },
        "orderDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MarketOrderDetail"
          }
        },
        "withdrawExpireAmount": {
          "type": "string",
          "format": "int64"
        },
        "cancelUnfreezeV2Amount": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "protocol.Transaction.Result.code": {
      "type": "string",
      "enum": [
        "SUCESS",
        "FAILED"
      ],
      "default": "SUCESS"
    },
    "protocol.Transaction.Result.contractResult": {
      "type": "string",
      "enum": [
        "DEFAULT",
        "SUCCESS",
        "REVERT",
        "BAD_JUMP_DESTINATION",
        "OUT_OF_MEMORY",
        "PRECOMPILED_CONTRACT",
        "STACK_TOO_SMALL",
        "STACK_TOO_LARGE",
        "ILLEGAL_OPERATION",
        "STACK_OVERFLOW",
        "OUT_OF_ENERGY",
        "OUT_OF_TIME",
        "JVM_STACK_OVER_FLOW",
        "UNKNOWN",
        "TRANSFER_FAILED",
        "INVALID_CODE"
      ],
      "default": "DEFAULT"
    },
    "protocol.Transaction.raw": {
      "type": "object",
      "properties": {
        "refBlockBytes": {
          "type": "string",
          "format": "byte"
        },
        "refBlockNum": {
          "type": "string",
          "format": "int64"
        },
        "refBlockHash": {
          "type": "string",
          "format": "byte"
        },
        "expiration": {
          "type": "string",
          "format": "int64"
        },
        "auths": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.authority"
          }
        },
        "data": {
          "type": "string",
          "format": "byte",
          "title": "data not used"
        },
        "contract": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Transaction.Contract"
          },
          "title": "only support size = 1,  repeated list here for extension"
        },
        "scripts": {
          "type": "string",
          "format": "byte",
          "title": "scripts not used"
        },
        "timestamp": {
          "type": "string",
          "format": "int64"
        },
        "feeLimit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.TransactionApprovedList": {
      "type": "object",
      "properties": {
        "approvedList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "result": {
          "$ref": "#/definitions/protocol.TransactionApprovedList.Result"
        },
        "transaction": {
          "$ref": "#/definitions/protocol.TransactionExtention"
        }
      }
    },
    "protocol.TransactionApprovedList.Result": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/protocol.TransactionApprovedList.Result.response_code"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "protocol.TransactionApprovedList.Result.response_code": {
      "type": "string",
      "enum": [
        "SUCCESS",
        "SIGNATURE_FORMAT_ERROR",
        "COMPUTE_ADDRESS_ERROR",
        "OTHER_ERROR"
      ],
      "default": "SUCCESS"
    },
    "protocol.TransactionBalanceTrace": {
      "type": "object",
      "properties": {
        "transactionIdentifier": {
          "type": "string",
          "format": "byte"
        },
        "operation": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionBalanceTrace.Operation"
          }
        },
        "type": {
          "type": "string"
        },
        "status": {
          "type": "string"
        }
      }
    },
    "protocol.TransactionBalanceTrace.Operation": {
      "type": "object",
      "properties": {
        "operationIdentifier": {
          "type": "string",
          "format": "int64"
        },
        "address": {
          "type": "string",
          "format": "byte"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.TransactionExtention": {
      "type": "object",
      "properties": {
        "transaction": {
          "$ref": "#/definitions/protocol.Transaction"
        },
        "txid": {
          "type": "string",
          "format": "byte",
          "title": "transaction id =  sha256(transaction.rowdata)"
        },
        "constantResult": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "result": {
          "$ref": "#/definitions/protocol.Return"
        },
        "energyUsed": {
          "type": "string",
          "format": "int64"
        },
        "logs": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionInfo.Log"
          }
        },
        "internalTransactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.InternalTransaction"
          }
        },
        "energyPenalty": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.TransactionIdList": {
      "type": "object",
      "properties": {
        "txId": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "protocol.TransactionInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "format": "byte"
        },
        "fee": {
          "type": "string",
          "format": "int64"
        },
        "blockNumber": {
          "type": "string",
          "format": "int64"
        },
        "blockTimeStamp": {
          "type": "string",
          "format": "int64"
        },
        "contractResult": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "contractAddress": {
          "type": "string",
          "format": "byte"
        },
        "receipt": {
          "$ref": "#/definitions/protocol.ResourceReceipt"
        },
        "log": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionInfo.Log"
          }
        },
        "result": {
          "$ref": "#/definitions/protocol.TransactionInfo.code"
        },
        "resMessage": {
          "type": "string",
          "format": "byte"
        },
        "assetIssueID": {
          "type": "string"
        },
        "withdrawAmount": {
          "type": "string",
          "format": "int64"
        },
        "unfreezeAmount": {
          "type": "string",
          "format": "int64"
        },
        "internalTransactions": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.InternalTransaction"
          }
        },
        "exchangeReceivedAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeInjectAnotherAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeWithdrawAnotherAmount": {
          "type": "string",
          "format": "int64"
        },
        "exchangeId": {
          "type": "string",
          "format": "int64"
        },
        "shieldedTransactionFee": {
          "type": "string",
          "format": "int64"
        },
        "orderId": {
          "type": "string",
          "format": "byte"
        },
        "orderDetails": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.MarketOrderDetail"
          }
        },
        "packingFee": {
          "type": "string",
          "format": "int64"
        },
        "withdrawExpireAmount": {
          "type": "string",
          "format": "int64"
        },
        "cancelUnfreezeV2Amount": {
          "type": "object",
          "additionalProperties": {
            "type": "string",
            "format": "int64"
          }
        }
      }
    },
    "protocol.TransactionInfo.Log": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "topics": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "data": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.TransactionInfo.code": {
      "type": "string",
      "enum": [
        "SUCESS",
        "FAILED"
      ],
      "default": "SUCESS"
    },
    "protocol.TransactionInfoList": {
      "type": "object",
      "properties": {
        "transactionInfo": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionInfo"
          }
        }
      }
    },
    "protocol.TransactionList": {
      "type": "object",
      "properties": {
        "transaction": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Transaction"
          }
        }
      }
    },
    "protocol.TransactionListExtention": {
      "type": "object",
      "properties": {
        "transaction": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.TransactionExtention"
          }
        }
      }
    },
    "protocol.TransactionSignWeight": {
      "type": "object",
      "properties": {
        "permission": {
          "$ref": "#/definitions/protocol.Permission"
        },
        "approvedList": {
          "type": "array",
          "items": {
            "type": "string",
            "format": "byte"
          }
        },
        "currentWeight": {
          "type": "string",
          "format": "int64"
        },
        "result": {
          "$ref": "#/definitions/protocol.TransactionSignWeight.Result"
        },
        "transaction": {
          "$ref": "#/definitions/protocol.TransactionExtention"
        }
      }
    },
    "protocol.TransactionSignWeight.Result": {
      "type": "object",
      "properties": {
        "code": {
          "$ref": "#/definitions/protocol.TransactionSignWeight.Result.response_code"
        },
        "message": {
          "type": "string"
        }
      }
    },
    "protocol.TransactionSignWeight.Result.response_code": {
      "type": "string",
      "enum": [
        "ENOUGH_PERMISSION",
        "NOT_ENOUGH_PERMISSION",
        "SIGNATURE_FORMAT_ERROR",
        "COMPUTE_ADDRESS_ERROR",
        "PERMISSION_ERROR",
        "OTHER_ERROR"
      ],
      "default": "ENOUGH_PERMISSION",
      "title": "- NOT_ENOUGH_PERMISSION: error in\n - PERMISSION_ERROR: The key is not in permission"
    },
    "protocol.TransferAssetContract": {
      "type": "object",
      "properties": {
        "assetName": {
          "type": "string",
          "format": "byte",
          "description": "this field is token name before the proposal ALLOW_SAME_TOKEN_NAME is active, otherwise it is token id and token is should be in string format."
        },
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "toAddress": {
          "type": "string",
          "format": "byte"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.TransferContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "toAddress": {
          "type": "string",
          "format": "byte"
        },
        "amount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.UnfreezeAssetContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.UnfreezeBalanceContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "resource": {
          "$ref": "#/definitions/protocol.ResourceCode"
        },
        "receiverAddress": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.UpdateAssetContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "description": {
          "type": "string",
          "format": "byte"
        },
        "url": {
          "type": "string",
          "format": "byte"
        },
        "newLimit": {
          "type": "string",
          "format": "int64"
        },
        "newPublicLimit": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.Vote": {
      "type": "object",
      "properties": {
        "voteAddress": {
          "type": "string",
          "format": "byte",
          "title": "the super rep address"
        },
        "voteCount": {
          "type": "string",
          "format": "int64",
          "description": "the vote num to this super rep."
        }
      },
      "title": "vote message"
    },
    "protocol.VoteWitnessContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "votes": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.VoteWitnessContract.Vote"
          }
        },
        "support": {
          "type": "boolean"
        }
      }
    },
    "protocol.VoteWitnessContract.Vote": {
      "type": "object",
      "properties": {
        "voteAddress": {
          "type": "string",
          "format": "byte"
        },
        "voteCount": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "protocol.WithdrawBalanceContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.Witness": {
      "type": "object",
      "properties": {
        "address": {
          "type": "string",
          "format": "byte"
        },
        "voteCount": {
          "type": "string",
          "format": "int64"
        },
        "pubKey": {
          "type": "string",
          "format": "byte"
        },
        "url": {
          "type": "string"
        },
        "totalProduced": {
          "type": "string",
          "format": "int64"
        },
        "totalMissed": {
          "type": "string",
          "format": "int64"
        },
        "latestBlockNum": {
          "type": "string",
          "format": "int64"
        },
        "latestSlotNum": {
          "type": "string",
          "format": "int64"
        },
        "isJobs": {
          "type": "boolean"
        }
      },
      "title": "Witness"
    },
    "protocol.WitnessCreateContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "url": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.WitnessList": {
      "type": "object",
      "properties": {
        "witnesses": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protocol.Witness"
          }
        }
      }
    },
    "protocol.WitnessUpdateContract": {
      "type": "object",
      "properties": {
        "ownerAddress": {
          "type": "string",
          "format": "byte"
        },
        "updateUrl": {
          "type": "string",
          "format": "byte"
        }
      }
    },
    "protocol.authority": {
      "type": "object",
      "properties": {
        "account": {
          "$ref": "#/definitions/protocol.AccountId"
        },
        "permissionName": {
          "type": "string",
          "format": "byte"
        }
      }
    }
  }
}
